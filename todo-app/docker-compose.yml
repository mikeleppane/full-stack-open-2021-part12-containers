version: '3.8'

services:
  nginx:
    image: nginx:1.20.1
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    container_name: reverse-proxy
    depends_on:
      - backend-dev

  frontend-dev:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    volumes:
      - ./todo-frontend:/usr/src/app
    ports:
      - "5000:80"
    container_name: frontend-dev
    depends_on:
      - backend-dev

  backend-dev:
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./todo-backend:/usr/src/app
    ports:
      - "3000:3000"
    container_name: backend-dev
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo
    restart: unless-stopped
    ports:
      - "3456:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    container_name: mongo

  redis:
    image: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: [ 'redis-server', '--appendonly', 'yes' ]
    container_name: redis
    volumes:
      - ./redis_data:/data